<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.comit.appointment.modules.workbench.dao.DishonestyRecordsMapper" >
  <resultMap id="BaseResultMap" type="cn.com.comit.appointment.modules.workbench.entity.DishonestyRecords" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="RECORD_ID" property="recordId" jdbcType="INTEGER" />
    <result column="USER_ACCOUNT" property="userAccount" jdbcType="VARCHAR" />
    <result column="NUMBER" property="number" jdbcType="INTEGER" />
    <result column="START_TIME" property="startTime" jdbcType="DATE" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="REMARKS1" property="remarks1" jdbcType="VARCHAR" />
    <result column="REMARKS2" property="remarks2" jdbcType="VARCHAR" />
    <result column="REMARKS3" property="remarks3" jdbcType="VARCHAR" />
    <result column="REMARKS4" property="remarks4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, RECORD_ID, USER_ACCOUNT, NUMBER, START_TIME, UPDATE_TIME, REMARKS1, REMARKS2, 
    REMARKS3, REMARKS4
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from TE.T_ATMT_DISHONESTY_RECORDS
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from TE.T_ATMT_DISHONESTY_RECORDS
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.comit.appointment.modules.workbench.entity.DishonestyRecords" >
   <selectKey keyProperty="id" resultType="INTEGER" order="BEFORE">  
	            select ATMT_DISHONESTY_RECORDS_ID_SEQ.nextval from dual  
	</selectKey>
    insert into TE.T_ATMT_DISHONESTY_RECORDS (ID, RECORD_ID, USER_ACCOUNT, 
      NUMBER, START_TIME, UPDATE_TIME, 
      REMARKS1, REMARKS2, REMARKS3, 
      REMARKS4)
    values (#{id,jdbcType=INTEGER}, #{recordId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{remarks1,jdbcType=VARCHAR}, #{remarks2,jdbcType=VARCHAR}, #{remarks3,jdbcType=VARCHAR}, 
      #{remarks4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.comit.appointment.modules.workbench.entity.DishonestyRecords" >
   <selectKey keyProperty="id" resultType="INTEGER" order="BEFORE">  
	            select ATMT_DISHONESTY_RECORDS_ID_SEQ.nextval from dual  
	</selectKey>
    insert into TE.T_ATMT_DISHONESTY_RECORDS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="userAccount != null" >
        USER_ACCOUNT,
      </if>
      <if test="number != null" >
        NUMBER,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="remarks1 != null" >
        REMARKS1,
      </if>
      <if test="remarks2 != null" >
        REMARKS2,
      </if>
      <if test="remarks3 != null" >
        REMARKS3,
      </if>
      <if test="remarks4 != null" >
        REMARKS4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="remarks1 != null" >
        #{remarks1,jdbcType=VARCHAR},
      </if>
      <if test="remarks2 != null" >
        #{remarks2,jdbcType=VARCHAR},
      </if>
      <if test="remarks3 != null" >
        #{remarks3,jdbcType=VARCHAR},
      </if>
      <if test="remarks4 != null" >
        #{remarks4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.comit.appointment.modules.workbench.entity.DishonestyRecords" >
    update TE.T_ATMT_DISHONESTY_RECORDS
    <set >
      <if test="recordId != null" >
        RECORD_ID = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        USER_ACCOUNT = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        NUMBER = #{number,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="remarks1 != null" >
        REMARKS1 = #{remarks1,jdbcType=VARCHAR},
      </if>
      <if test="remarks2 != null" >
        REMARKS2 = #{remarks2,jdbcType=VARCHAR},
      </if>
      <if test="remarks3 != null" >
        REMARKS3 = #{remarks3,jdbcType=VARCHAR},
      </if>
      <if test="remarks4 != null" >
        REMARKS4 = #{remarks4,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.comit.appointment.modules.workbench.entity.DishonestyRecords" >
    update TE.T_ATMT_DISHONESTY_RECORDS
    set RECORD_ID = #{recordId,jdbcType=INTEGER},
      USER_ACCOUNT = #{userAccount,jdbcType=VARCHAR},
      NUMBER = #{number,jdbcType=INTEGER},
      START_TIME = #{startTime,jdbcType=DATE},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      REMARKS1 = #{remarks1,jdbcType=VARCHAR},
      REMARKS2 = #{remarks2,jdbcType=VARCHAR},
      REMARKS3 = #{remarks3,jdbcType=VARCHAR},
      REMARKS4 = #{remarks4,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>